{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\quizbm\\\\quizbm-frontend\\\\src\\\\pages\\\\EditQuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport QuizForm from '../components/quiz/QuizForm';\nimport quizService from '../services/quiz';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport QuestionManager from '../components/quiz/QuestionManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditQuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [quiz, setQuiz] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        setLoading(true);\n        const response = await quizService.getQuiz(id);\n        setQuiz(response.data);\n        setError(null);\n      } catch (err) {\n        setError('Failed to fetch quiz data.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuiz();\n  }, [id]);\n  const handleUpdateQuiz = async quizData => {\n    try {\n      await quizService.updateQuiz(id, {\n        data: quizData\n      });\n      alert('Quiz updated successfully!');\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Failed to update quiz:', error);\n      alert('Failed to update quiz. Please check the console for details.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-500 text-center p-8\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: \"Edit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Quiz Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(QuizForm, {\n          onSubmit: handleUpdateQuiz,\n          initialData: quiz,\n          isEditing: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(QuestionManager, {\n          quiz: quiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(EditQuizPage, \"9M9hkw1qGIUqP5WK8tPd3pAUNSs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditQuizPage;\nexport default EditQuizPage;\nvar _c;\n$RefreshReg$(_c, \"EditQuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","QuizForm","quizService","LoadingSpinner","QuestionManager","jsxDEV","_jsxDEV","EditQuizPage","_s","id","navigate","quiz","setQuiz","loading","setLoading","error","setError","fetchQuiz","response","getQuiz","data","err","console","handleUpdateQuiz","quizData","updateQuiz","alert","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSubmit","initialData","isEditing","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/quizbm/quizbm-frontend/src/pages/EditQuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport QuizForm from '../components/quiz/QuizForm';\r\nimport quizService from '../services/quiz';\r\nimport LoadingSpinner from '../components/common/LoadingSpinner';\r\nimport QuestionManager from '../components/quiz/QuestionManager';\r\n\r\nconst EditQuizPage = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [quiz, setQuiz] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchQuiz = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await quizService.getQuiz(id);\r\n                setQuiz(response.data);\r\n                setError(null);\r\n            } catch (err) {\r\n                setError('Failed to fetch quiz data.');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchQuiz();\r\n    }, [id]);\r\n\r\n    const handleUpdateQuiz = async (quizData) => {\r\n        try {\r\n            await quizService.updateQuiz(id, {data: quizData});\r\n            alert('Quiz updated successfully!');\r\n            navigate('/dashboard');\r\n        } catch (error) {\r\n            console.error('Failed to update quiz:', error);\r\n            alert('Failed to update quiz. Please check the console for details.');\r\n        }\r\n    };\r\n\r\n    if (loading) return <LoadingSpinner />;\r\n    if (error) return <div className=\"text-red-500 text-center p-8\">{error}</div>;\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-4\">\r\n            <h1 className=\"text-2xl font-bold mb-4 text-center\">Edit Quiz</h1>\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                <div>\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Quiz Details</h2>\r\n                    <QuizForm onSubmit={handleUpdateQuiz} initialData={quiz} isEditing={true} />\r\n                </div>\r\n                <div>\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Questions</h2>\r\n                    <QuestionManager quiz={quiz} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditQuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}