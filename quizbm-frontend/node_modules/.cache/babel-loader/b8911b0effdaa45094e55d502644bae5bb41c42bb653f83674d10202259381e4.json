{"ast":null,"code":"import{useState,useEffect,useRef}from'react';export const useTimer=(initialTime,onTimeUp)=>{const[timeLeft,setTimeLeft]=useState(initialTime);const[isActive,setIsActive]=useState(false);const intervalRef=useRef(null);const startTimer=()=>{setIsActive(true);};const pauseTimer=()=>{setIsActive(false);};const resetTimer=function(){let newTime=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialTime;setIsActive(false);setTimeLeft(newTime);};useEffect(()=>{if(isActive&&timeLeft>0){intervalRef.current=setInterval(()=>{setTimeLeft(time=>{if(time<=1){setIsActive(false);onTimeUp&&onTimeUp();return 0;}return time-1;});},1000);}else{clearInterval(intervalRef.current);}return()=>clearInterval(intervalRef.current);},[isActive,timeLeft,onTimeUp]);return{timeLeft,isActive,startTimer,pauseTimer,resetTimer};};","map":{"version":3,"names":["useState","useEffect","useRef","useTimer","initialTime","onTimeUp","timeLeft","setTimeLeft","isActive","setIsActive","intervalRef","startTimer","pauseTimer","resetTimer","newTime","arguments","length","undefined","current","setInterval","time","clearInterval"],"sources":["C:/xampp/htdocs/quizbm/quizbm-frontend/src/hooks/useTimer.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\n\r\nexport const useTimer = (initialTime, onTimeUp) => {\r\n  const [timeLeft, setTimeLeft] = useState(initialTime);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const intervalRef = useRef(null);\r\n\r\n  const startTimer = () => {\r\n    setIsActive(true);\r\n  };\r\n\r\n  const pauseTimer = () => {\r\n    setIsActive(false);\r\n  };\r\n\r\n  const resetTimer = (newTime = initialTime) => {\r\n    setIsActive(false);\r\n    setTimeLeft(newTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isActive && timeLeft > 0) {\r\n      intervalRef.current = setInterval(() => {\r\n        setTimeLeft((time) => {\r\n          if (time <= 1) {\r\n            setIsActive(false);\r\n            onTimeUp && onTimeUp();\r\n            return 0;\r\n          }\r\n          return time - 1;\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [isActive, timeLeft, onTimeUp]);\r\n\r\n  return {\r\n    timeLeft,\r\n    isActive,\r\n    startTimer,\r\n    pauseTimer,\r\n    resetTimer\r\n  };\r\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAEnD,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAACC,WAAW,CAAEC,QAAQ,GAAK,CACjD,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAACI,WAAW,CAAC,CACrD,KAAM,CAACI,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAAU,WAAW,CAAGR,MAAM,CAAC,IAAI,CAAC,CAEhC,KAAM,CAAAS,UAAU,CAAGA,CAAA,GAAM,CACvBF,WAAW,CAAC,IAAI,CAAC,CACnB,CAAC,CAED,KAAM,CAAAG,UAAU,CAAGA,CAAA,GAAM,CACvBH,WAAW,CAAC,KAAK,CAAC,CACpB,CAAC,CAED,KAAM,CAAAI,UAAU,CAAG,QAAAA,CAAA,CAA2B,IAA1B,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGX,WAAW,CACvCK,WAAW,CAAC,KAAK,CAAC,CAClBF,WAAW,CAACO,OAAO,CAAC,CACtB,CAAC,CAEDb,SAAS,CAAC,IAAM,CACd,GAAIO,QAAQ,EAAIF,QAAQ,CAAG,CAAC,CAAE,CAC5BI,WAAW,CAACQ,OAAO,CAAGC,WAAW,CAAC,IAAM,CACtCZ,WAAW,CAAEa,IAAI,EAAK,CACpB,GAAIA,IAAI,EAAI,CAAC,CAAE,CACbX,WAAW,CAAC,KAAK,CAAC,CAClBJ,QAAQ,EAAIA,QAAQ,CAAC,CAAC,CACtB,MAAO,EAAC,CACV,CACA,MAAO,CAAAe,IAAI,CAAG,CAAC,CACjB,CAAC,CAAC,CACJ,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,IAAM,CACLC,aAAa,CAACX,WAAW,CAACQ,OAAO,CAAC,CACpC,CAEA,MAAO,IAAMG,aAAa,CAACX,WAAW,CAACQ,OAAO,CAAC,CACjD,CAAC,CAAE,CAACV,QAAQ,CAAEF,QAAQ,CAAED,QAAQ,CAAC,CAAC,CAElC,MAAO,CACLC,QAAQ,CACRE,QAAQ,CACRG,UAAU,CACVC,UAAU,CACVC,UACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}