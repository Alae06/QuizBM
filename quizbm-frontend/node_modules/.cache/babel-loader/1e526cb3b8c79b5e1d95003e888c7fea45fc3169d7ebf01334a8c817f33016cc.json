{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import quizService from'../services/quiz';import LoadingSpinner from'../components/common/LoadingSpinner';import QuizPlayer from'../components/quiz/QuizPlayer';import Leaderboard from'../components/quiz/Leaderboard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PlayQuizPage=()=>{const{slug}=useParams();const[quiz,setQuiz]=useState(null);const[gameState,setGameState]=useState('intro');// intro, playing, finished\nconst[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[pin,setPin]=useState('');const[isPinVerified,setIsPinVerified]=useState(false);const[score,setScore]=useState(null);useEffect(()=>{const fetchQuiz=async()=>{try{setLoading(true);const response=await quizService.getPublicQuiz(slug);setQuiz(response.data);if(!response.data.has_pin){setIsPinVerified(true);}}catch(err){setError('Quiz not found or failed to load.');console.error(err);}finally{setLoading(false);}};fetchQuiz();},[slug]);const handlePinSubmit=async e=>{e.preventDefault();try{await quizService.verifyPin(quiz.id,pin);setIsPinVerified(true);}catch(err){setError('Invalid PIN.');}};const handleStartQuiz=()=>{setGameState('playing');};const handleFinishQuiz=finalScore=>{setScore(finalScore);setGameState('finished');};if(loading)return/*#__PURE__*/_jsx(LoadingSpinner,{});if(error&&!quiz)return/*#__PURE__*/_jsx(\"div\",{className:\"text-red-500 text-center p-8\",children:error});if(!isPinVerified){return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-4 text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:quiz.title}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-4\",children:quiz.description}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handlePinSubmit,className:\"max-w-sm mx-auto\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:pin,onChange:e=>setPin(e.target.value),placeholder:\"Enter PIN\",className:\"w-full px-3 py-2 border rounded-md\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"mt-4 bg-blue-500 text-white py-2 px-4 rounded\",children:\"Enter Quiz\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 mt-2\",children:error})]})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-4\",children:[gameState==='intro'&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-2\",children:quiz.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-600 mb-6\",children:quiz.description}),/*#__PURE__*/_jsx(\"button\",{onClick:handleStartQuiz,className:\"bg-green-500 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg text-xl\",children:\"Start Quiz\"})]}),gameState==='playing'&&/*#__PURE__*/_jsx(QuizPlayer,{quiz:quiz,onFinish:handleFinishQuiz}),gameState==='finished'&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-2\",children:\"Quiz Finished!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-2xl mb-6\",children:[\"Your score: \",score,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"max-w-md mx-auto\",children:/*#__PURE__*/_jsx(Leaderboard,{quiz:quiz})})]})]});};export default PlayQuizPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","quizService","LoadingSpinner","QuizPlayer","Leaderboard","jsx","_jsx","jsxs","_jsxs","PlayQuizPage","slug","quiz","setQuiz","gameState","setGameState","loading","setLoading","error","setError","pin","setPin","isPinVerified","setIsPinVerified","score","setScore","fetchQuiz","response","getPublicQuiz","data","has_pin","err","console","handlePinSubmit","e","preventDefault","verifyPin","id","handleStartQuiz","handleFinishQuiz","finalScore","className","children","title","description","onSubmit","type","value","onChange","target","placeholder","onClick","onFinish"],"sources":["C:/xampp/htdocs/quizbm/quizbm-frontend/src/pages/PlayQuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport quizService from '../services/quiz';\r\nimport LoadingSpinner from '../components/common/LoadingSpinner';\r\nimport QuizPlayer from '../components/quiz/QuizPlayer';\r\nimport Leaderboard from '../components/quiz/Leaderboard';\r\n\r\nconst PlayQuizPage = () => {\r\n    const { slug } = useParams();\r\n    const [quiz, setQuiz] = useState(null);\r\n    const [gameState, setGameState] = useState('intro'); // intro, playing, finished\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [pin, setPin] = useState('');\r\n    const [isPinVerified, setIsPinVerified] = useState(false);\r\n    const [score, setScore] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchQuiz = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await quizService.getPublicQuiz(slug);\r\n                setQuiz(response.data);\r\n                if (!response.data.has_pin) {\r\n                    setIsPinVerified(true);\r\n                }\r\n            } catch (err) {\r\n                setError('Quiz not found or failed to load.');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchQuiz();\r\n    }, [slug]);\r\n\r\n    const handlePinSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await quizService.verifyPin(quiz.id, pin);\r\n            setIsPinVerified(true);\r\n        } catch (err) {\r\n            setError('Invalid PIN.');\r\n        }\r\n    };\r\n    \r\n    const handleStartQuiz = () => {\r\n        setGameState('playing');\r\n    };\r\n\r\n    const handleFinishQuiz = (finalScore) => {\r\n        setScore(finalScore);\r\n        setGameState('finished');\r\n    };\r\n\r\n    if (loading) return <LoadingSpinner />;\r\n    if (error && !quiz) return <div className=\"text-red-500 text-center p-8\">{error}</div>;\r\n\r\n    if (!isPinVerified) {\r\n        return (\r\n            <div className=\"container mx-auto p-4 text-center\">\r\n                <h1 className=\"text-2xl font-bold mb-4\">{quiz.title}</h1>\r\n                <p className=\"mb-4\">{quiz.description}</p>\r\n                <form onSubmit={handlePinSubmit} className=\"max-w-sm mx-auto\">\r\n                    <input\r\n                        type=\"password\"\r\n                        value={pin}\r\n                        onChange={(e) => setPin(e.target.value)}\r\n                        placeholder=\"Enter PIN\"\r\n                        className=\"w-full px-3 py-2 border rounded-md\"\r\n                    />\r\n                    <button type=\"submit\" className=\"mt-4 bg-blue-500 text-white py-2 px-4 rounded\">\r\n                        Enter Quiz\r\n                    </button>\r\n                    {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-4\">\r\n            {gameState === 'intro' && (\r\n                <div className=\"text-center\">\r\n                    <h1 className=\"text-3xl font-bold mb-2\">{quiz.title}</h1>\r\n                    <p className=\"text-lg text-gray-600 mb-6\">{quiz.description}</p>\r\n                    <button onClick={handleStartQuiz} className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg text-xl\">\r\n                        Start Quiz\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {gameState === 'playing' && (\r\n                <QuizPlayer quiz={quiz} onFinish={handleFinishQuiz} />\r\n            )}\r\n            {gameState === 'finished' && (\r\n                <div className=\"text-center\">\r\n                    <h1 className=\"text-3xl font-bold mb-2\">Quiz Finished!</h1>\r\n                    <p className=\"text-2xl mb-6\">Your score: {score}%</p>\r\n                    <div className=\"max-w-md mx-auto\">\r\n                        <Leaderboard quiz={quiz} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayQuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}