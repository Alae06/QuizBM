{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect,useCallback}from'react';import api from'../services/api';import{authService}from'../services/auth';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const useAuth=()=>{return useContext(AuthContext);};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const fetchUser=useCallback(async()=>{const token=authService.getToken();if(token){try{// Axios interceptor will use the token\nconst{data}=await api.get('/user');setUser(data);}catch(e){// Token is invalid, so log out\nauthService.logout();setUser(null);}}setLoading(false);},[]);useEffect(()=>{fetchUser();},[fetchUser]);const login=async(email,password)=>{const{user}=await authService.login({email,password});setUser(user);};const register=async(name,email,password,password_confirmation)=>{const{user}=await authService.register({name,email,password,password_confirmation});setUser(user);};const logout=()=>{authService.logout();setUser(null);};const value={user,loading,login,register,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});};export{AuthContext};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","api","authService","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","loading","setLoading","fetchUser","token","getToken","data","get","e","logout","login","email","password","register","name","password_confirmation","value","Provider"],"sources":["C:/xampp/htdocs/quizbm/quizbm-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport api from '../services/api';\r\nimport { authService } from '../services/auth';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchUser = useCallback(async () => {\r\n    const token = authService.getToken();\r\n    if (token) {\r\n      try {\r\n        // Axios interceptor will use the token\r\n        const { data } = await api.get('/user');\r\n        setUser(data);\r\n      } catch (e) {\r\n        // Token is invalid, so log out\r\n        authService.logout();\r\n        setUser(null);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [fetchUser]);\r\n\r\n  const login = async (email, password) => {\r\n    const { user } = await authService.login({ email, password });\r\n    setUser(user);\r\n  };\r\n\r\n  const register = async (name, email, password, password_confirmation) => {\r\n    const { user } = await authService.register({ \r\n      name, \r\n      email, \r\n      password, \r\n      password_confirmation \r\n    });\r\n    setUser(user);\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext };"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC1F,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,KAAM,CAAAC,WAAW,cAAGT,aAAa,CAAC,IAAI,CAAC,CAEvC,MAAO,MAAM,CAAAU,OAAO,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAAT,UAAU,CAACQ,WAAW,CAAC,CAChC,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAAAgB,SAAS,CAAGd,WAAW,CAAC,SAAY,CACxC,KAAM,CAAAe,KAAK,CAAGb,WAAW,CAACc,QAAQ,CAAC,CAAC,CACpC,GAAID,KAAK,CAAE,CACT,GAAI,CACF;AACA,KAAM,CAAEE,IAAK,CAAC,CAAG,KAAM,CAAAhB,GAAG,CAACiB,GAAG,CAAC,OAAO,CAAC,CACvCP,OAAO,CAACM,IAAI,CAAC,CACf,CAAE,MAAOE,CAAC,CAAE,CACV;AACAjB,WAAW,CAACkB,MAAM,CAAC,CAAC,CACpBT,OAAO,CAAC,IAAI,CAAC,CACf,CACF,CACAE,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAENd,SAAS,CAAC,IAAM,CACde,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAO,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvC,KAAM,CAAEb,IAAK,CAAC,CAAG,KAAM,CAAAR,WAAW,CAACmB,KAAK,CAAC,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAC,CAC7DZ,OAAO,CAACD,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAc,QAAQ,CAAG,KAAAA,CAAOC,IAAI,CAAEH,KAAK,CAAEC,QAAQ,CAAEG,qBAAqB,GAAK,CACvE,KAAM,CAAEhB,IAAK,CAAC,CAAG,KAAM,CAAAR,WAAW,CAACsB,QAAQ,CAAC,CAC1CC,IAAI,CACJH,KAAK,CACLC,QAAQ,CACRG,qBACF,CAAC,CAAC,CACFf,OAAO,CAACD,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAU,MAAM,CAAGA,CAAA,GAAM,CACnBlB,WAAW,CAACkB,MAAM,CAAC,CAAC,CACpBT,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAgB,KAAK,CAAG,CACZjB,IAAI,CACJE,OAAO,CACPS,KAAK,CACLG,QAAQ,CACRJ,MACF,CAAC,CAED,mBACEhB,IAAA,CAACC,WAAW,CAACuB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAlB,QAAA,CAChC,CAACG,OAAO,EAAIH,QAAQ,CACD,CAAC,CAE3B,CAAC,CAED,OAASJ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}