{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\quizbm\\\\quizbm-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { authService } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchUser = useCallback(async () => {\n    const token = authService.getToken();\n    if (token) {\n      try {\n        // Axios interceptor will use the token\n        const {\n          data\n        } = await api.get('/user');\n        setUser(data);\n      } catch (e) {\n        // Token is invalid, so log out\n        authService.logout();\n        setUser(null);\n      }\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n  const login = async (email, password) => {\n    const {\n      user\n    } = await authService.login({\n      email,\n      password\n    });\n    setUser(user);\n  };\n  const register = async (name, email, password, password_confirmation) => {\n    const {\n      user\n    } = await authService.register({\n      name,\n      email,\n      password,\n      password_confirmation\n    });\n    setUser(user);\n  };\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"ac3jDG6KKItrNi4VAzavDq3vTG8=\");\n_c = AuthProvider;\nexport { AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","api","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","fetchUser","token","getToken","data","get","e","logout","login","email","password","register","name","password_confirmation","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/quizbm/quizbm-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport api from '../services/api';\r\nimport { authService } from '../services/auth';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchUser = useCallback(async () => {\r\n    const token = authService.getToken();\r\n    if (token) {\r\n      try {\r\n        // Axios interceptor will use the token\r\n        const { data } = await api.get('/user');\r\n        setUser(data);\r\n      } catch (e) {\r\n        // Token is invalid, so log out\r\n        authService.logout();\r\n        setUser(null);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [fetchUser]);\r\n\r\n  const login = async (email, password) => {\r\n    const { user } = await authService.login({ email, password });\r\n    setUser(user);\r\n  };\r\n\r\n  const register = async (name, email, password, password_confirmation) => {\r\n    const { user } = await authService.register({ \r\n      name, \r\n      email, \r\n      password, \r\n      password_confirmation \r\n    });\r\n    setUser(user);\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext };"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC1F,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGT,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMU,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOV,UAAU,CAACQ,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMiB,SAAS,GAAGf,WAAW,CAAC,YAAY;IACxC,MAAMgB,KAAK,GAAGd,WAAW,CAACe,QAAQ,CAAC,CAAC;IACpC,IAAID,KAAK,EAAE;MACT,IAAI;QACF;QACA,MAAM;UAAEE;QAAK,CAAC,GAAG,MAAMjB,GAAG,CAACkB,GAAG,CAAC,OAAO,CAAC;QACvCP,OAAO,CAACM,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,CAAC,EAAE;QACV;QACAlB,WAAW,CAACmB,MAAM,CAAC,CAAC;QACpBT,OAAO,CAAC,IAAI,CAAC;MACf;IACF;IACAE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMO,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAM;MAAEb;IAAK,CAAC,GAAG,MAAMT,WAAW,CAACoB,KAAK,CAAC;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC7DZ,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,MAAMc,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEH,KAAK,EAAEC,QAAQ,EAAEG,qBAAqB,KAAK;IACvE,MAAM;MAAEhB;IAAK,CAAC,GAAG,MAAMT,WAAW,CAACuB,QAAQ,CAAC;MAC1CC,IAAI;MACJH,KAAK;MACLC,QAAQ;MACRG;IACF,CAAC,CAAC;IACFf,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnBnB,WAAW,CAACmB,MAAM,CAAC,CAAC;IACpBT,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMgB,KAAK,GAAG;IACZjB,IAAI;IACJE,OAAO;IACPS,KAAK;IACLG,QAAQ;IACRJ;EACF,CAAC;EAED,oBACEjB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAACvB,GAAA,CAzDWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA2DzB,SAASH,WAAW;AAAG,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}