{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\quizbm\\\\quizbm-frontend\\\\src\\\\components\\\\quiz\\\\QuizPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useTimer } from '../../hooks/useTimer';\nimport quizService from '../../services/quiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPlayer = ({\n  quiz,\n  onFinish\n}) => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [selectedChoice, setSelectedChoice] = useState(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [participantName, setParticipantName] = useState('');\n  const [hasStarted, setHasStarted] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [quizResults, setQuizResults] = useState(null);\n  const [startTime, setStartTime] = useState(null);\n  const currentQuestion = useMemo(() => quiz.questions[currentQuestionIndex], [quiz, currentQuestionIndex]);\n\n  // Memoize handleTimeUp to avoid breaking the timer\n  const handleTimeUp = useCallback(() => {\n    setAnswers(prev => ({\n      ...prev,\n      [currentQuestion.id]: null\n    }));\n    setShowFeedback(true);\n  }, [currentQuestion.id]);\n  const {\n    timeLeft,\n    startTimer,\n    resetTimer,\n    stopTimer\n  } = useTimer((currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.time_per_question) || 30, handleTimeUp);\n  useEffect(() => {\n    if (hasStarted && currentQuestion) {\n      resetTimer(currentQuestion.time_per_question || quiz.time_per_question || 30);\n      startTimer();\n      setSelectedChoice(null);\n      setShowFeedback(false);\n    }\n  }, [currentQuestion, hasStarted, quiz.time_per_question, resetTimer, startTimer]);\n  const handleAnswerSelect = choiceId => {\n    if (showFeedback) return;\n    setSelectedChoice(choiceId);\n  };\n  const handleSubmitAnswer = () => {\n    if (selectedChoice === null) return;\n    setAnswers(prev => ({\n      ...prev,\n      [currentQuestion.id]: selectedChoice\n    }));\n    setShowFeedback(true);\n    stopTimer();\n  };\n  const handleNextQuestion = () => {\n    setShowFeedback(false);\n    setSelectedChoice(null);\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    } else {\n      submitQuiz();\n    }\n  };\n  const submitQuiz = async () => {\n    setIsSubmitting(true);\n    const finalAnswers = {\n      ...answers\n    };\n    if (selectedChoice !== null && !showFeedback) {\n      finalAnswers[currentQuestion.id] = selectedChoice;\n    }\n    const timeTaken = startTime ? Math.floor((Date.now() - startTime) / 1000) : 1;\n    try {\n      const response = await quizService.submitAttempt(quiz.slug, {\n        participant_name: participantName,\n        answers: finalAnswers,\n        time_taken: timeTaken\n      });\n      setQuizResults(response.data);\n      setShowResults(true);\n      onFinish(response.data.score);\n    } catch (error) {\n      console.error('Error submitting quiz:', error);\n      alert('There was an error submitting your quiz.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleStart = e => {\n    e.preventDefault();\n    if (participantName.trim()) {\n      setHasStarted(true);\n      setStartTime(Date.now());\n    }\n  };\n\n  // Helper to get correct choice id for current question (from backend data, not exposed to user)\n  const getCorrectChoiceId = () => {\n    if (!quizResults || !quizResults.feedback) return null;\n    const feedback = quizResults.feedback.find(f => f.question_id === currentQuestion.id);\n    if (feedback) {\n      const correctText = feedback.correct_answer;\n      const correct = currentQuestion.choices.find(c => c.text === correctText);\n      return correct ? correct.id : null;\n    }\n    return null;\n  };\n\n  // Show results screen if quiz is finished\n  if (showResults && quizResults) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-results-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-4\",\n          children: \"Quiz Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-results-score\",\n          children: [quizResults.score, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl text-gray-600 mb-6\",\n          children: [\"You got \", quizResults.correct_answers, \" out of \", quizResults.total_questions, \" questions correct\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-results-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz-results-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quiz-results-correct text-2xl\",\n                children: quizResults.correct_answers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quiz-results-incorrect text-2xl\",\n                children: quizResults.total_questions - quizResults.correct_answers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Incorrect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-results-questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Question Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), quizResults.feedback.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-results-question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz-results-question-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold\",\n              children: [\"Question \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `quiz-results-status ${item.is_correct ? 'correct' : 'incorrect'}`,\n              children: item.is_correct ? 'Correct' : 'Incorrect'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 mb-4\",\n            children: item.question_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz-results-answers\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quiz-results-answer-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quiz-results-answer-label\",\n                children: \"Your answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `quiz-results-answer-value ${item.is_correct ? 'correct' : 'incorrect'}`,\n                children: item.participant_answer || 'No answer'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this), !item.is_correct && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quiz-results-answer-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quiz-results-answer-label\",\n                children: \"Correct answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quiz-results-answer-value correct\",\n                children: item.correct_answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, item.question_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.href = '/',\n          className: \"quiz-results-back-button\",\n          children: \"Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n  if (!hasStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleStart,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          value: participantName,\n          onChange: e => setParticipantName(e.target.value),\n          className: \"text-lg p-2 border rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mt-4 bg-blue-500 text-white py-2 px-4 rounded\",\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Per-question feedback UI\n  const correctChoiceId = quizResults && quizResults.feedback ? getCorrectChoiceId() : null;\n  const isAnswered = showFeedback || answers[currentQuestion.id] !== undefined;\n  const isCorrect = correctChoiceId !== null && selectedChoice === correctChoiceId;\n  const showCorrect = showFeedback && correctChoiceId !== null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: \"TEST CHANGE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizPlayer, \"YaT3W8csBODYR3sQW5bfTZVMT4E=\", false, function () {\n  return [useTimer];\n});\n_c = QuizPlayer;\nexport default QuizPlayer;\nvar _c;\n$RefreshReg$(_c, \"QuizPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useTimer","quizService","jsxDEV","_jsxDEV","QuizPlayer","quiz","onFinish","_s","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","selectedChoice","setSelectedChoice","showFeedback","setShowFeedback","isSubmitting","setIsSubmitting","participantName","setParticipantName","hasStarted","setHasStarted","showResults","setShowResults","quizResults","setQuizResults","startTime","setStartTime","currentQuestion","questions","handleTimeUp","prev","id","timeLeft","startTimer","resetTimer","stopTimer","time_per_question","handleAnswerSelect","choiceId","handleSubmitAnswer","handleNextQuestion","length","submitQuiz","finalAnswers","timeTaken","Math","floor","Date","now","response","submitAttempt","slug","participant_name","time_taken","data","score","error","console","alert","handleStart","e","preventDefault","trim","getCorrectChoiceId","feedback","find","f","question_id","correctText","correct_answer","correct","choices","c","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","correct_answers","total_questions","map","item","index","is_correct","question_text","participant_answer","onClick","window","location","href","onSubmit","type","placeholder","value","onChange","target","required","correctChoiceId","isAnswered","undefined","isCorrect","showCorrect","style","color","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/quizbm/quizbm-frontend/src/components/quiz/QuizPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { useTimer } from '../../hooks/useTimer';\r\nimport quizService from '../../services/quiz';\r\n\r\nconst QuizPlayer = ({ quiz, onFinish }) => {\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [answers, setAnswers] = useState({});\r\n    const [selectedChoice, setSelectedChoice] = useState(null);\r\n    const [showFeedback, setShowFeedback] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [participantName, setParticipantName] = useState('');\r\n    const [hasStarted, setHasStarted] = useState(false);\r\n    const [showResults, setShowResults] = useState(false);\r\n    const [quizResults, setQuizResults] = useState(null);\r\n    const [startTime, setStartTime] = useState(null);\r\n\r\n    const currentQuestion = useMemo(() => quiz.questions[currentQuestionIndex], [quiz, currentQuestionIndex]);\r\n\r\n    // Memoize handleTimeUp to avoid breaking the timer\r\n    const handleTimeUp = useCallback(() => {\r\n        setAnswers(prev => ({ ...prev, [currentQuestion.id]: null }));\r\n        setShowFeedback(true);\r\n    }, [currentQuestion.id]);\r\n\r\n    const { timeLeft, startTimer, resetTimer, stopTimer } = useTimer(\r\n        currentQuestion?.time_per_question || 30,\r\n        handleTimeUp\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (hasStarted && currentQuestion) {\r\n            resetTimer(currentQuestion.time_per_question || quiz.time_per_question || 30);\r\n            startTimer();\r\n            setSelectedChoice(null);\r\n            setShowFeedback(false);\r\n        }\r\n    }, [currentQuestion, hasStarted, quiz.time_per_question, resetTimer, startTimer]);\r\n\r\n    const handleAnswerSelect = (choiceId) => {\r\n        if (showFeedback) return;\r\n        setSelectedChoice(choiceId);\r\n    };\r\n\r\n    const handleSubmitAnswer = () => {\r\n        if (selectedChoice === null) return;\r\n        setAnswers(prev => ({ ...prev, [currentQuestion.id]: selectedChoice }));\r\n        setShowFeedback(true);\r\n        stopTimer();\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        setShowFeedback(false);\r\n        setSelectedChoice(null);\r\n        if (currentQuestionIndex < quiz.questions.length - 1) {\r\n            setCurrentQuestionIndex(prev => prev + 1);\r\n        } else {\r\n            submitQuiz();\r\n        }\r\n    };\r\n\r\n    const submitQuiz = async () => {\r\n        setIsSubmitting(true);\r\n        const finalAnswers = { ...answers };\r\n        if (selectedChoice !== null && !showFeedback) {\r\n            finalAnswers[currentQuestion.id] = selectedChoice;\r\n        }\r\n        const timeTaken = startTime ? Math.floor((Date.now() - startTime) / 1000) : 1;\r\n        try {\r\n            const response = await quizService.submitAttempt(quiz.slug, {\r\n                participant_name: participantName,\r\n                answers: finalAnswers,\r\n                time_taken: timeTaken\r\n            });\r\n            setQuizResults(response.data);\r\n            setShowResults(true);\r\n            onFinish(response.data.score);\r\n        } catch (error) {\r\n            console.error('Error submitting quiz:', error);\r\n            alert('There was an error submitting your quiz.');\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const handleStart = (e) => {\r\n        e.preventDefault();\r\n        if(participantName.trim()){\r\n            setHasStarted(true);\r\n            setStartTime(Date.now());\r\n        }\r\n    };\r\n\r\n    // Helper to get correct choice id for current question (from backend data, not exposed to user)\r\n    const getCorrectChoiceId = () => {\r\n        if (!quizResults || !quizResults.feedback) return null;\r\n        const feedback = quizResults.feedback.find(f => f.question_id === currentQuestion.id);\r\n        if (feedback) {\r\n            const correctText = feedback.correct_answer;\r\n            const correct = currentQuestion.choices.find(c => c.text === correctText);\r\n            return correct ? correct.id : null;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Show results screen if quiz is finished\r\n    if (showResults && quizResults) {\r\n        return (\r\n            <div className=\"quiz-results\">\r\n                <div className=\"quiz-results-header\">\r\n                    <h1 className=\"text-3xl font-bold mb-4\">Quiz Results</h1>\r\n                    <div className=\"quiz-results-score\">\r\n                        {quizResults.score}%\r\n                    </div>\r\n                    <div className=\"text-xl text-gray-600 mb-6\">\r\n                        You got {quizResults.correct_answers} out of {quizResults.total_questions} questions correct\r\n                    </div>\r\n                    <div className=\"quiz-results-summary\">\r\n                        <div className=\"text-lg font-semibold mb-2\">Summary</div>\r\n                        <div className=\"quiz-results-stats\">\r\n                            <div>\r\n                                <div className=\"quiz-results-correct text-2xl\">{quizResults.correct_answers}</div>\r\n                                <div className=\"text-sm text-gray-600\">Correct</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"quiz-results-incorrect text-2xl\">{quizResults.total_questions - quizResults.correct_answers}</div>\r\n                                <div className=\"text-sm text-gray-600\">Incorrect</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"quiz-results-questions\">\r\n                    <h2 className=\"text-2xl font-bold mb-4\">Question Review</h2>\r\n                    {quizResults.feedback.map((item, index) => (\r\n                        <div key={item.question_id} className=\"quiz-results-question\">\r\n                            <div className=\"quiz-results-question-header\">\r\n                                <h3 className=\"text-lg font-semibold\">\r\n                                    Question {index + 1}\r\n                                </h3>\r\n                                <div className={`quiz-results-status ${item.is_correct ? 'correct' : 'incorrect'}`}>\r\n                                    {item.is_correct ? 'Correct' : 'Incorrect'}\r\n                                </div>\r\n                            </div>\r\n                            <p className=\"text-gray-700 mb-4\">{item.question_text}</p>\r\n                            <div className=\"quiz-results-answers\">\r\n                                <div className=\"quiz-results-answer-row\">\r\n                                    <span className=\"quiz-results-answer-label\">Your answer:</span>\r\n                                    <span className={`quiz-results-answer-value ${item.is_correct ? 'correct' : 'incorrect'}`}>\r\n                                        {item.participant_answer || 'No answer'}\r\n                                    </span>\r\n                                </div>\r\n                                {!item.is_correct && (\r\n                                    <div className=\"quiz-results-answer-row\">\r\n                                        <span className=\"quiz-results-answer-label\">Correct answer:</span>\r\n                                        <span className=\"quiz-results-answer-value correct\">\r\n                                            {item.correct_answer}\r\n                                        </span>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button\r\n                        onClick={() => window.location.href = '/'}\r\n                        className=\"quiz-results-back-button\"\r\n                    >\r\n                        Back to Home\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!hasStarted) {\r\n        return (\r\n            <div className=\"text-center\">\r\n                <form onSubmit={handleStart}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your name\"\r\n                        value={participantName}\r\n                        onChange={(e) => setParticipantName(e.target.value)}\r\n                        className=\"text-lg p-2 border rounded\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"mt-4 bg-blue-500 text-white py-2 px-4 rounded\">\r\n                        Start Quiz\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Per-question feedback UI\r\n    const correctChoiceId = quizResults && quizResults.feedback\r\n        ? getCorrectChoiceId()\r\n        : null;\r\n    const isAnswered = showFeedback || answers[currentQuestion.id] !== undefined;\r\n    const isCorrect = correctChoiceId !== null && selectedChoice === correctChoiceId;\r\n    const showCorrect = showFeedback && correctChoiceId !== null;\r\n\r\n    return (\r\n        <div style={{color: 'red'}}>TEST CHANGE</div>\r\n    );\r\n};\r\n\r\nexport default QuizPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}