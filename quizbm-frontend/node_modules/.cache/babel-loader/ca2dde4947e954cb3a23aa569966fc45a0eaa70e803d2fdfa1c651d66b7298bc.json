{"ast":null,"code":"import _objectSpread from\"C:/xampp/htdocs/quizbm/quizbm-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo}from'react';import{useTimer}from'../../hooks/useTimer';import quizService from'../../services/quiz';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuizPlayer=_ref=>{let{quiz,onFinish}=_ref;const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[answers,setAnswers]=useState({});const[selectedChoice,setSelectedChoice]=useState(null);const[isSubmitting,setIsSubmitting]=useState(false);const[participantName,setParticipantName]=useState('');const[hasStarted,setHasStarted]=useState(false);const currentQuestion=useMemo(()=>quiz.questions[currentQuestionIndex],[quiz,currentQuestionIndex]);const{timeLeft,startTimer,resetTimer}=useTimer((currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.time_per_question)||30,()=>handleNextQuestion(true)// auto-submit on time up\n);useEffect(()=>{if(hasStarted&&currentQuestion){resetTimer(currentQuestion.time_per_question||quiz.time_per_question||30);startTimer();setSelectedChoice(null);}},[currentQuestion,hasStarted,quiz.time_per_question,resetTimer,startTimer]);const handleAnswerSelect=choiceId=>{setSelectedChoice(choiceId);};const handleNextQuestion=function(){let isTimeUp=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;const answer=isTimeUp?null:selectedChoice;setAnswers(prev=>_objectSpread(_objectSpread({},prev),{},{[currentQuestion.id]:answer}));if(currentQuestionIndex<quiz.questions.length-1){setCurrentQuestionIndex(prev=>prev+1);}else{submitQuiz();}};const submitQuiz=async()=>{setIsSubmitting(true);const finalAnswers=_objectSpread({},answers);if(selectedChoice){finalAnswers[currentQuestion.id]=selectedChoice;}try{const response=await quizService.submitAttempt(quiz.slug,{participant_name:participantName,answers:finalAnswers,time_taken:1// placeholder\n});onFinish(response.data.score);}catch(error){console.error('Error submitting quiz:',error);alert('There was an error submitting your quiz.');}finally{setIsSubmitting(false);}};const handleStart=e=>{e.preventDefault();if(participantName.trim()){setHasStarted(true);}};if(!hasStarted){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleStart,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter your name\",value:participantName,onChange:e=>setParticipantName(e.target.value),className:\"text-lg p-2 border rounded\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"mt-4 bg-blue-500 text-white py-2 px-4 rounded\",children:\"Start Quiz\"})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"max-w-4xl mx-auto p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-lg p-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:quiz.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-100 text-red-800 px-4 py-2 rounded-lg font-bold\",children:[\"Time Left: \",timeLeft,\"s\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between text-sm text-gray-600 mb-2\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Question \",currentQuestionIndex+1,\" of \",quiz.questions.length]})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-2 rounded-full transition-all duration-300\",style:{width:\"\".concat((currentQuestionIndex+1)/quiz.questions.length*100,\"%\")}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-6\",children:currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.question_text}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.choices.map((choice,index)=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleAnswerSelect(choice.id),className:\"w-full p-4 text-left border-2 rounded-lg transition-all \".concat(selectedChoice===choice.id?'border-blue-500 bg-blue-50':'border-gray-200 hover:border-gray-300'),children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium mr-3\",children:[String.fromCharCode(65+index),\".\"]}),choice.text]},choice.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleNextQuestion(false),disabled:!selectedChoice||isSubmitting,className:\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\",children:currentQuestionIndex===quiz.questions.length-1?isSubmitting?'Submitting...':'Finish':'Next'})})]})});};export default QuizPlayer;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useTimer","quizService","jsx","_jsx","jsxs","_jsxs","QuizPlayer","_ref","quiz","onFinish","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","selectedChoice","setSelectedChoice","isSubmitting","setIsSubmitting","participantName","setParticipantName","hasStarted","setHasStarted","currentQuestion","questions","timeLeft","startTimer","resetTimer","time_per_question","handleNextQuestion","handleAnswerSelect","choiceId","isTimeUp","arguments","length","undefined","answer","prev","_objectSpread","id","submitQuiz","finalAnswers","response","submitAttempt","slug","participant_name","time_taken","data","score","error","console","alert","handleStart","e","preventDefault","trim","className","children","onSubmit","type","placeholder","value","onChange","target","required","title","style","width","concat","question_text","choices","map","choice","index","onClick","String","fromCharCode","text","disabled"],"sources":["C:/xampp/htdocs/quizbm/quizbm-frontend/src/components/quiz/QuizPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useTimer } from '../../hooks/useTimer';\r\nimport quizService from '../../services/quiz';\r\n\r\nconst QuizPlayer = ({ quiz, onFinish }) => {\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [answers, setAnswers] = useState({});\r\n    const [selectedChoice, setSelectedChoice] = useState(null);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [participantName, setParticipantName] = useState('');\r\n    const [hasStarted, setHasStarted] = useState(false);\r\n\r\n    const currentQuestion = useMemo(() => quiz.questions[currentQuestionIndex], [quiz, currentQuestionIndex]);\r\n\r\n    const { timeLeft, startTimer, resetTimer } = useTimer(\r\n        currentQuestion?.time_per_question || 30,\r\n        () => handleNextQuestion(true) // auto-submit on time up\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (hasStarted && currentQuestion) {\r\n            resetTimer(currentQuestion.time_per_question || quiz.time_per_question || 30);\r\n            startTimer();\r\n            setSelectedChoice(null);\r\n        }\r\n    }, [currentQuestion, hasStarted, quiz.time_per_question, resetTimer, startTimer]);\r\n\r\n    const handleAnswerSelect = (choiceId) => {\r\n        setSelectedChoice(choiceId);\r\n    };\r\n\r\n    const handleNextQuestion = (isTimeUp = false) => {\r\n        const answer = isTimeUp ? null : selectedChoice;\r\n        setAnswers(prev => ({ ...prev, [currentQuestion.id]: answer }));\r\n\r\n        if (currentQuestionIndex < quiz.questions.length - 1) {\r\n            setCurrentQuestionIndex(prev => prev + 1);\r\n        } else {\r\n            submitQuiz();\r\n        }\r\n    };\r\n\r\n    const submitQuiz = async () => {\r\n        setIsSubmitting(true);\r\n        const finalAnswers = { ...answers };\r\n        if (selectedChoice) {\r\n            finalAnswers[currentQuestion.id] = selectedChoice;\r\n        }\r\n\r\n        try {\r\n            const response = await quizService.submitAttempt(quiz.slug, {\r\n                participant_name: participantName,\r\n                answers: finalAnswers,\r\n                time_taken: 1 // placeholder\r\n            });\r\n            onFinish(response.data.score);\r\n        } catch (error) {\r\n            console.error('Error submitting quiz:', error);\r\n            alert('There was an error submitting your quiz.');\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n    \r\n    const handleStart = (e) => {\r\n        e.preventDefault();\r\n        if(participantName.trim()){\r\n            setHasStarted(true);\r\n        }\r\n    }\r\n\r\n    if (!hasStarted) {\r\n        return (\r\n            <div className=\"text-center\">\r\n                <form onSubmit={handleStart}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your name\"\r\n                        value={participantName}\r\n                        onChange={(e) => setParticipantName(e.target.value)}\r\n                        className=\"text-lg p-2 border rounded\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"mt-4 bg-blue-500 text-white py-2 px-4 rounded\">\r\n                        Start Quiz\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"max-w-4xl mx-auto p-6\">\r\n            <div className=\"bg-white rounded-lg shadow-lg p-8\">\r\n                <div className=\"flex justify-between items-center mb-6\">\r\n                    <h1 className=\"text-2xl font-bold\">{quiz.title}</h1>\r\n                    <div className=\"bg-red-100 text-red-800 px-4 py-2 rounded-lg font-bold\">\r\n                        Time Left: {timeLeft}s\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mb-6\">\r\n                    <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\r\n                        <span>Question {currentQuestionIndex + 1} of {quiz.questions.length}</span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                        <div\r\n                            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                            style={{\r\n                                width: `${((currentQuestionIndex + 1) / quiz.questions.length) * 100}%`\r\n                            }}\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mb-8\">\r\n                    <h2 className=\"text-xl font-semibold mb-6\">\r\n                        {currentQuestion?.question_text}\r\n                    </h2>\r\n\r\n                    <div className=\"space-y-3\">\r\n                        {currentQuestion?.choices.map((choice, index) => (\r\n                            <button\r\n                                key={choice.id}\r\n                                onClick={() => handleAnswerSelect(choice.id)}\r\n                                className={`w-full p-4 text-left border-2 rounded-lg transition-all ${\r\n                                    selectedChoice === choice.id\r\n                                        ? 'border-blue-500 bg-blue-50'\r\n                                        : 'border-gray-200 hover:border-gray-300'\r\n                                }`}\r\n                            >\r\n                                <span className=\"font-medium mr-3\">\r\n                                    {String.fromCharCode(65 + index)}.\r\n                                </span>\r\n                                {choice.text}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flex justify-end\">\r\n                    <button\r\n                        onClick={() => handleNextQuestion(false)}\r\n                        disabled={!selectedChoice || isSubmitting}\r\n                        className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                        {currentQuestionIndex === quiz.questions.length - 1\r\n                            ? (isSubmitting ? 'Submitting...' : 'Finish')\r\n                            : 'Next'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuizPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}