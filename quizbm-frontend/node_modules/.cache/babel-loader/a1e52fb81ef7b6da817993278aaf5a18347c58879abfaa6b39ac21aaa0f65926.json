{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nexport const useTimer = (initialTime, onTimeUp) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(initialTime);\n  const [isActive, setIsActive] = useState(false);\n  const intervalRef = useRef(null);\n  const startTimer = () => {\n    setIsActive(true);\n  };\n  const pauseTimer = () => {\n    setIsActive(false);\n  };\n  const resetTimer = (newTime = initialTime) => {\n    setIsActive(false);\n    setTimeLeft(newTime);\n  };\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(time => {\n          if (time <= 1) {\n            setIsActive(false);\n            onTimeUp && onTimeUp();\n            return 0;\n          }\n          return time - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [isActive, timeLeft, onTimeUp]);\n  return {\n    timeLeft,\n    isActive,\n    startTimer,\n    pauseTimer,\n    resetTimer\n  };\n};\n_s(useTimer, \"nHvemZIhB/thi5hH/j7rHkRdJVY=\");","map":{"version":3,"names":["useState","useEffect","useRef","useTimer","initialTime","onTimeUp","_s","timeLeft","setTimeLeft","isActive","setIsActive","intervalRef","startTimer","pauseTimer","resetTimer","newTime","current","setInterval","time","clearInterval"],"sources":["C:/xampp/htdocs/quizbm/quizbm-frontend/src/hooks/useTimer.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\n\r\nexport const useTimer = (initialTime, onTimeUp) => {\r\n  const [timeLeft, setTimeLeft] = useState(initialTime);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const intervalRef = useRef(null);\r\n\r\n  const startTimer = () => {\r\n    setIsActive(true);\r\n  };\r\n\r\n  const pauseTimer = () => {\r\n    setIsActive(false);\r\n  };\r\n\r\n  const resetTimer = (newTime = initialTime) => {\r\n    setIsActive(false);\r\n    setTimeLeft(newTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isActive && timeLeft > 0) {\r\n      intervalRef.current = setInterval(() => {\r\n        setTimeLeft((time) => {\r\n          if (time <= 1) {\r\n            setIsActive(false);\r\n            onTimeUp && onTimeUp();\r\n            return 0;\r\n          }\r\n          return time - 1;\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [isActive, timeLeft, onTimeUp]);\r\n\r\n  return {\r\n    timeLeft,\r\n    isActive,\r\n    startTimer,\r\n    pauseTimer,\r\n    resetTimer\r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,WAAW,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAACI,WAAW,CAAC;EACrD,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMW,WAAW,GAAGT,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvBF,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBH,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMI,UAAU,GAAGA,CAACC,OAAO,GAAGX,WAAW,KAAK;IAC5CM,WAAW,CAAC,KAAK,CAAC;IAClBF,WAAW,CAACO,OAAO,CAAC;EACtB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,IAAIF,QAAQ,GAAG,CAAC,EAAE;MAC5BI,WAAW,CAACK,OAAO,GAAGC,WAAW,CAAC,MAAM;QACtCT,WAAW,CAAEU,IAAI,IAAK;UACpB,IAAIA,IAAI,IAAI,CAAC,EAAE;YACbR,WAAW,CAAC,KAAK,CAAC;YAClBL,QAAQ,IAAIA,QAAQ,CAAC,CAAC;YACtB,OAAO,CAAC;UACV;UACA,OAAOa,IAAI,GAAG,CAAC;QACjB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACR,WAAW,CAACK,OAAO,CAAC;IACpC;IAEA,OAAO,MAAMG,aAAa,CAACR,WAAW,CAACK,OAAO,CAAC;EACjD,CAAC,EAAE,CAACP,QAAQ,EAAEF,QAAQ,EAAEF,QAAQ,CAAC,CAAC;EAElC,OAAO;IACLE,QAAQ;IACRE,QAAQ;IACRG,UAAU;IACVC,UAAU;IACVC;EACF,CAAC;AACH,CAAC;AAACR,EAAA,CA5CWH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}